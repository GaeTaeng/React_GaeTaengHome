{"ast":null,"code":"import _slicedToArray from\"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import'./Shiritori.css';import{useState,useRef}from'react';export default function Shiritori(){var _useState=useState(\"시작\"),_useState2=_slicedToArray(_useState,2),word=_useState2[0],setWord=_useState2[1];var _useState3=useState(\"여기에 입력하여주세요!\"),_useState4=_slicedToArray(_useState3,2),inputWord=_useState4[0],setInputWord=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),result=_useState6[0],setResult=_useState6[1];var inputRef=useRef(null);var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),wordList=_useState8[0],setWordList=_useState8[1];var subList=[];function onCheckAnswer(){if(word[word.length-1]===inputWord[0]){setResult(\"정답!\");setWord(inputWord);setInputWord('');subList.push(inputWord);//console.log(\"정답!SUB\" + subList.length);\nwordList.push(inputWord);//setWordList(...wordList+inputWord);\nconsole.log(wordList);//console.log(\"정답!\" + wordList.length);\n}else{console.log(wordList.length);setResult(\"오답!\");setInputWord('');}inputRef.current.focus();}function onChangeInput(e){setInputWord(e.target.value);}function onClickInput(){setInputWord(\"\");}function onKeyPress(e){if(e.key===\"Enter\"){onCheckAnswer();}}return React.createElement(\"element\",{id:\"Shiritori\"},React.createElement(\"div\",null,\"\\uB05D\\uB9D0\\uC787\\uAE30 ------\"),React.createElement(\"div\",{className:\"Shiritori\"},React.createElement(\"div\",null,\"\\uD604\\uC7AC\\uB2E8\\uC5B4 : \"),React.createElement(\"div\",{className:\"word\"},word),React.createElement(\"input\",{ref:inputRef,value:inputWord,onChange:onChangeInput,onClick:onClickInput,onKeyPress:onKeyPress,maxLength:\"4\",minLength:\"2\"}),React.createElement(\"button\",{onClick:onCheckAnswer},\"PASS!\"),React.createElement(\"div\",null,result),React.createElement(\"div\",null,\"\\uC815\\uB2F5 \\uAC1C\\uC218 : \",wordList.length),React.createElement(\"div\",null,wordList?wordList.map(function(p){return React.createElement(\"div\",null,p);}):\"정답이 없습니다.\")));}","map":{"version":3,"sources":["G:/Git/GaeTaeng Home/gaetaenghome/client/src/components/Main/contents/minigame/shiritori/Shiritori.js"],"names":["React","useState","useRef","Shiritori","word","setWord","inputWord","setInputWord","result","setResult","inputRef","wordList","setWordList","subList","onCheckAnswer","length","push","console","log","current","focus","onChangeInput","e","target","value","onClickInput","onKeyPress","key","map","p"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,iBAAP,CACA,OAAQC,QAAR,CAAkBC,MAAlB,KAAgC,OAAhC,CACA,cAAe,SAASC,CAAAA,SAAT,EAAqB,eACRF,QAAQ,CAAC,IAAD,CADA,wCACzBG,IADyB,eACnBC,OADmB,8BAEEJ,QAAQ,CAAC,cAAD,CAFV,yCAEzBK,SAFyB,eAEdC,YAFc,8BAGJN,QAAQ,CAAC,EAAD,CAHJ,yCAGzBO,MAHyB,eAGjBC,SAHiB,eAIhC,GAAMC,CAAAA,QAAQ,CAAGR,MAAM,CAAC,IAAD,CAAvB,CAJgC,eAKAD,QAAQ,CAAC,EAAD,CALR,yCAKzBU,QALyB,eAKfC,WALe,eAMhC,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,QAASC,CAAAA,aAAT,EAAyB,CACrB,GAAIV,IAAI,CAACA,IAAI,CAACW,MAAL,CAAc,CAAf,CAAJ,GAA0BT,SAAS,CAAC,CAAD,CAAvC,CAA4C,CACxCG,SAAS,CAAC,KAAD,CAAT,CACAJ,OAAO,CAACC,SAAD,CAAP,CACAC,YAAY,CAAC,EAAD,CAAZ,CACAM,OAAO,CAACG,IAAR,CAAaV,SAAb,EACA;AACAK,QAAQ,CAACK,IAAT,CAAcV,SAAd,EACA;AACAW,OAAO,CAACC,GAAR,CAAYP,QAAZ,EACA;AACH,CAVD,IAUO,CACHM,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACI,MAArB,EACAN,SAAS,CAAC,KAAD,CAAT,CACAF,YAAY,CAAC,EAAD,CAAZ,CACH,CAEDG,QAAQ,CAACS,OAAT,CAAiBC,KAAjB,GACH,CACD,QAASC,CAAAA,aAAT,CAAuBC,CAAvB,CAA0B,CACtBf,YAAY,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CACH,CACD,QAASC,CAAAA,YAAT,EAAwB,CACpBlB,YAAY,CAAC,EAAD,CAAZ,CACH,CACD,QAASmB,CAAAA,UAAT,CAAoBJ,CAApB,CAAuB,CACnB,GAAIA,CAAC,CAACK,GAAF,GAAU,OAAd,CAAuB,CACnBb,aAAa,GAChB,CACJ,CACD,MACI,gCAAS,EAAE,CAAC,WAAZ,EACI,iEADJ,CAEI,2BAAK,SAAS,CAAG,WAAjB,EACI,6DADJ,CACsB,2BAAK,SAAS,CAAC,MAAf,EAAuBV,IAAvB,CADtB,CAEQ,6BAAO,GAAG,CAAEM,QAAZ,CAAsB,KAAK,CAAEJ,SAA7B,CAAwC,QAAQ,CAAEe,aAAlD,CAAiE,OAAO,CAAEI,YAA1E,CAAwF,UAAU,CAAEC,UAApG,CAAgH,SAAS,CAAC,GAA1H,CAA8H,SAAS,CAAC,GAAxI,EAFR,CAGQ,8BAAQ,OAAO,CAAEZ,aAAjB,UAHR,CAII,+BAAMN,MAAN,CAJJ,CAKI,8DAAcG,QAAQ,CAACI,MAAvB,CALJ,CAMG,+BACEJ,QAAQ,CAAGA,QAAQ,CAACiB,GAAT,CAAc,SAAAC,CAAC,CAAI,CAC3B,MACI,gCAAMA,CAAN,CADJ,CAGH,CAJW,CAAH,CAKL,WANL,CANH,CAFJ,CADJ,CAoBH","sourcesContent":["import React from 'react'\r\nimport './Shiritori.css'\r\nimport {useState, useRef } from 'react'\r\nexport default function Shiritori() {\r\n    const [word, setWord] = useState(\"시작\");\r\n    const [inputWord, setInputWord] = useState(\"여기에 입력하여주세요!\");\r\n    const [result, setResult] = useState('');\r\n    const inputRef = useRef(null);\r\n    const [wordList, setWordList] = useState([]);\r\n    let subList = [];\r\n    function onCheckAnswer() {\r\n        if (word[word.length - 1] === inputWord[0]) {\r\n            setResult(\"정답!\");\r\n            setWord(inputWord);\r\n            setInputWord('');\r\n            subList.push(inputWord); \r\n            //console.log(\"정답!SUB\" + subList.length);\r\n            wordList.push(inputWord);\r\n            //setWordList(...wordList+inputWord);\r\n            console.log(wordList);\r\n            //console.log(\"정답!\" + wordList.length);\r\n        } else {\r\n            console.log(wordList.length);\r\n            setResult(\"오답!\");\r\n            setInputWord('');\r\n        }\r\n\r\n        inputRef.current.focus();\r\n    }\r\n    function onChangeInput(e) {\r\n        setInputWord(e.target.value);\r\n    }\r\n    function onClickInput() {\r\n        setInputWord(\"\");\r\n    }\r\n    function onKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            onCheckAnswer();\r\n        }\r\n    }\r\n    return (\r\n        <element id=\"Shiritori\">\r\n            <div>끝말잇기 ------</div>\r\n            <div className = \"Shiritori\">\r\n                <div>현재단어 : </div><div className=\"word\">{word}</div>\r\n                    <input ref={inputRef} value={inputWord} onChange={onChangeInput} onClick={onClickInput} onKeyPress={onKeyPress} maxLength='4' minLength='2'/>\r\n                    <button onClick={onCheckAnswer}>PASS!</button>\r\n                <div>{result}</div>\r\n                <div>정답 개수 : {wordList.length}</div>\r\n               <div>\r\n                {wordList ? wordList.map( p => {\r\n                    return (\r\n                        <div>{p}</div>\r\n                    )\r\n                }\r\n                ) : \"정답이 없습니다.\"}\r\n                </div>\r\n            </div>\r\n        </element>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}