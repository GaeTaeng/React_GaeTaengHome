{"ast":null,"code":"var _jsxFileName = \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\src\\\\components\\\\Main\\\\contents\\\\board\\\\Board.js\";\nimport React from 'react';\nimport \"./Board.css\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  root: {\n    width: '90%',\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: \"1080px\"\n  }\n});\nconst post = [{\n  'id': 1,\n  'title': \"1 Post\",\n  'content': \"내용1\",\n  'writer': \"ㄱㅌ\",\n  'date': Date.now.toString\n}, {\n  'id': 2,\n  'title': \"2 Post\",\n  'content': \"내용2\",\n  'writer': \"fmldlmdd\",\n  'date': Date.now.toString\n}, {\n  'id': 3,\n  'title': \"3 Post\",\n  'content': \"내용3\",\n  'writer': \"탱탱\",\n  'date': Date.now.toString\n}];\nexport default function Board() {\n  return React.createElement(\"div\", {\n    id: \"Board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(PostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}\n\nfunction PostList() {\n  const classes = useStyles();\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"TITLE\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"CONTENT\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"WRITER\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" DATE\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, post.map(p => {\n    return React.createElement(PostView, {\n      id: p.id,\n      title: p.title,\n      content: p.content,\n      writer: p.writer,\n      date: p.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n  }))));\n}\n\nfunction PostView(props) {\n  return React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, props.id), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, props.title), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, props.content), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.writer), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.date));\n}","map":{"version":3,"sources":["G:/Git/GaeTaeng Home/gaetaenghome/src/components/Main/contents/board/Board.js"],"names":["React","Paper","Table","TableHead","TableBody","TableRow","TableCell","makeStyles","useStyles","root","width","overflowX","table","minWidth","post","Date","now","toString","Board","PostList","classes","map","p","id","title","content","writer","date","PostView","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./Board.css\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '90%',\r\n        overflowX: \"auto\"\r\n    },\r\n    table: {\r\n        minWidth: \"1080px\"\r\n    }\r\n});\r\n\r\nconst post = [\r\n    {\r\n        'id': 1,\r\n        'title': \"1 Post\",\r\n        'content': \"내용1\",\r\n        'writer': \"ㄱㅌ\",\r\n        'date': Date.now.toString\r\n    },\r\n    {\r\n        'id': 2,\r\n        'title': \"2 Post\",\r\n        'content': \"내용2\",\r\n        'writer': \"fmldlmdd\",\r\n        'date': Date.now.toString\r\n    },\r\n    {\r\n        'id': 3,\r\n        'title': \"3 Post\",\r\n        'content': \"내용3\",\r\n        'writer': \"탱탱\",\r\n        'date': Date.now.toString\r\n    }\r\n]\r\n\r\nexport default function Board() {\r\n    return (\r\n        <div id=\"Board\">\r\n            <PostList />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction PostList() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>TITLE</TableCell>\r\n                        <TableCell>CONTENT</TableCell>\r\n                        <TableCell>WRITER</TableCell>\r\n                        <TableCell> DATE</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {post.map(p => {\r\n                        return (\r\n                            <PostView id={p.id} title={p.title} content={p.content} writer={p.writer} date={p.date} />\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n\r\n            </Table>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nfunction PostView(props) {\r\n    return (\r\n        <TableRow>\r\n            <TableCell>{props.id}</TableCell>\r\n            <TableCell>{props.title}</TableCell>\r\n            <TableCell>{props.content}</TableCell>\r\n            <TableCell>{props.writer}</TableCell>\r\n            <TableCell>{props.date}</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}