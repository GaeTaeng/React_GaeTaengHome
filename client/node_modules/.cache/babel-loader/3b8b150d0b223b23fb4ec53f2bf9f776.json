{"ast":null,"code":"import _slicedToArray from \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\src\\\\components\\\\Main\\\\contents\\\\minigame\\\\numberbaseball\\\\Numberbaseball.js\";\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport './Numberbaseball.css';\nexport default function Numberbaseball() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        word = _useState2[0],\n        setWord = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputWord = _useState4[0],\n        setInputWord = _useState4[1];\n\n  const _useState5 = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        numArray = _useState6[0],\n        setNumArray = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        strikeArray = _useState8[0],\n        setStrikeArray = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        ballArray = _useState10[0],\n        setBallArray = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        outArray = _useState12[0],\n        setOutArray = _useState12[1];\n\n  console.log(\"WORLD Strike\");\n  console.log(strikeArray);\n\n  function MakeNumber() {\n    setNumArray([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    let WordArray = [];\n    console.log(\"gd\");\n\n    for (let i = 1; i < 5;) {\n      let iNum = Math.floor(Math.random() * (numArray.length - 1) + 1);\n\n      if (numArray[iNum] === 0) {\n        numArray[iNum] = i++;\n        WordArray.push(iNum);\n        console.log(numArray);\n      }\n    }\n\n    setWord(WordArray);\n    setStrikeArray([]);\n    console.log(\"MakeNumber Strike\");\n    console.log(strikeArray);\n    setBallArray([]);\n    setOutArray([]);\n  }\n\n  if (word === undefined) {\n    MakeNumber();\n  }\n\n  function CheckNumber() {\n    console.log(\"CheckNumber start Strike\");\n    console.log(strikeArray);\n    let arr = [0, 0, 0];\n\n    for (let i = 0; i < 4; i++) {\n      let iIdx = word.indexOf(Number(inputWord[i]));\n      console.log(\"IDX : \" + iIdx + \"INPUT : \" + inputWord[i]);\n\n      switch (iIdx) {\n        case i:\n          arr[0]++;\n          break;\n\n        case -1:\n          arr[2]++;\n          break;\n\n        default:\n          arr[1]++;\n          break;\n      }\n    }\n\n    setStrikeArray([...strikeArray, arr[0]]);\n    console.log(strikeArray);\n    setBallArray([...ballArray, arr[1]]);\n    setOutArray([...outArray, arr[2]]);\n    console.log(\"CheckNum : \");\n    console.log(strikeArray);\n    console.log(ballArray);\n    console.log(outArray);\n  }\n\n  function onClickButtonAnswer() {\n    CheckNumber();\n  }\n\n  function onClickButtonReset() {\n    MakeNumber();\n  }\n\n  function onChangeInput(e) {\n    setInputWord(e.target.value);\n  }\n\n  function onKeyPress(e) {\n    if (e.key === \"Enter\") {\n      CheckNumber();\n    }\n  }\n\n  return React.createElement(\"element\", {\n    id: \"Numberbaseball\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, console.log(\"Main start Strike \"), console.log(strikeArray), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uC22B\\uC790 :: \", word), React.createElement(\"input\", {\n    onKeyPress: onKeyPress,\n    value: inputWord,\n    onChange: onChangeInput,\n    maxLength: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onClickButtonAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"GO!\"), React.createElement(\"button\", {\n    onClick: onClickButtonReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"\\uCD08\\uAE30\\uD654\"), console.log(\"MAIN Strike\"), console.log(strikeArray), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, strikeArray > 0 ? strikeArray.map(p => {\n    return {\n      p\n    };\n  }) : \"0\", \"Strike!\"));\n}","map":{"version":3,"sources":["G:/Git/GaeTaeng Home/gaetaenghome/client/src/components/Main/contents/minigame/numberbaseball/Numberbaseball.js"],"names":["React","useState","useRef","Numberbaseball","word","setWord","inputWord","setInputWord","numArray","setNumArray","strikeArray","setStrikeArray","ballArray","setBallArray","outArray","setOutArray","console","log","MakeNumber","WordArray","i","iNum","Math","floor","random","length","push","undefined","CheckNumber","arr","iIdx","indexOf","Number","onClickButtonAnswer","onClickButtonReset","onChangeInput","e","target","value","onKeyPress","key","map","p"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useRef } from 'react'\r\n\r\nimport './Numberbaseball.css'\r\nexport default function Numberbaseball() {\r\n    const [word, setWord] = useState();\r\n    const [inputWord, setInputWord] = useState(\"\");\r\n    const [numArray, setNumArray] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n    const [strikeArray, setStrikeArray] = useState([]);\r\n    const [ballArray, setBallArray] = useState([]);\r\n    const [outArray, setOutArray] = useState([]);\r\n\r\n    console.log(\"WORLD Strike\")\r\n    console.log(strikeArray);\r\n\r\n    function MakeNumber() {\r\n        setNumArray([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        let WordArray = [];\r\n        console.log(\"gd\");\r\n        for (let i = 1; i < 5;) {\r\n            let iNum = Math.floor(Math.random() * (numArray.length - 1) + 1);\r\n            if (numArray[iNum] === 0) {\r\n                numArray[iNum] = i++;\r\n                WordArray.push(iNum);\r\n                console.log(numArray);\r\n            }\r\n        }\r\n        setWord(WordArray);\r\n\r\n        setStrikeArray([]);\r\n        console.log(\"MakeNumber Strike\")\r\n        console.log(strikeArray);\r\n        setBallArray([]);\r\n        setOutArray([]);\r\n    }\r\n\r\n    if (word === undefined) {\r\n        MakeNumber();\r\n    }\r\n\r\n    function CheckNumber() {\r\n        console.log(\"CheckNumber start Strike\")\r\n        console.log(strikeArray);\r\n        let arr = [0, 0, 0];\r\n        for (let i = 0; i < 4; i++) {\r\n            let iIdx = word.indexOf(Number(inputWord[i]));\r\n            console.log(\"IDX : \" + iIdx + \"INPUT : \" + inputWord[i]);\r\n            switch (iIdx) {\r\n                case i:\r\n                    arr[0]++;\r\n                    break;\r\n                case -1:\r\n                    arr[2]++;\r\n                    break;\r\n                default:\r\n                    arr[1]++;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        setStrikeArray(\r\n            [\r\n                ...strikeArray,arr[0]\r\n            ]\r\n        );\r\n        console.log(strikeArray);\r\n        setBallArray(\r\n            [\r\n                ...ballArray,arr[1]\r\n            ]\r\n        );\r\n        setOutArray(\r\n            [\r\n                ...outArray,arr[2]\r\n            ]\r\n        );\r\n        \r\n\r\n        console.log(\"CheckNum : \");\r\n        console.log (strikeArray);\r\n        console.log(ballArray);\r\n        console.log(outArray);\r\n    }\r\n    function onClickButtonAnswer() {\r\n        CheckNumber();\r\n\r\n    }\r\n    function onClickButtonReset() {\r\n        MakeNumber();\r\n    }\r\n    function onChangeInput(e) {\r\n        setInputWord(e.target.value);\r\n    }\r\n    function onKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            CheckNumber();\r\n        }\r\n    }\r\n    return (\r\n        <element id=\"Numberbaseball\">\r\n        {console.log(\"Main start Strike \")}\r\n        {console.log(strikeArray)}\r\n            <div>현재 숫자 :: {word}</div>\r\n            <input onKeyPress={onKeyPress} value={inputWord} onChange={onChangeInput} maxLength='4' />\r\n            <button onClick={onClickButtonAnswer}>GO!</button>\r\n            <button onClick={onClickButtonReset}>초기화</button>\r\n            {console.log(\"MAIN Strike\")}\r\n            {console.log(strikeArray)}\r\n            <div>{strikeArray > 0 ? strikeArray.map( p=> {\r\n                return (\r\n                    {p}\r\n                )\r\n            }) : \"0\"}Strike!\r\n            </div>\r\n        </element>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}