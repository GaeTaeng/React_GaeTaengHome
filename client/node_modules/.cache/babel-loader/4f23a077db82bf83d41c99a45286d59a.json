{"ast":null,"code":"var _jsxFileName = \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\src\\\\components\\\\Main\\\\contents\\\\board\\\\Board.js\";\nimport React, { useEffect } from 'react';\nimport \"./Board.css\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  root: {\n    width: '100vh',\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: \"100vh\"\n  }\n});\nexport default function Board() {\n  return React.createElement(\"div\", {\n    id: \"Board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(PostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nfunction PostList() {\n  const classes = useStyles();\n  state = {\n    posts: \"\"\n  };\n  /*componentDidMount() {\r\n      this.callApi().then(res => this.setState({posts:res}))\r\n      .catch(err => console.log(err));\r\n  }\r\n  */\n\n  useEffect(() => {\n    callApi = async () => {\n      const response = await fetch('/api/post');\n      const body = await response.json();\n      return body;\n    };\n\n    this.callApi().then(res => this.setState({\n      posts: res\n    })).catch(err => console.log(err));\n  });\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"ID!\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"TITLE\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"CONTENT\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"WRITER\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \" DATE\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, post.map(p => {\n    return React.createElement(PostView, {\n      id: p.id,\n      title: p.title,\n      content: p.content,\n      writer: p.writer,\n      date: p.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n  }))));\n}\n\nfunction PostView(props) {\n  return React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.id), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.title), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, props.content), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, props.writer), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, props.date));\n}","map":{"version":3,"sources":["G:/Git/GaeTaeng Home/gaetaenghome/client/src/components/Main/contents/board/Board.js"],"names":["React","useEffect","Paper","Table","TableHead","TableBody","TableRow","TableCell","makeStyles","useStyles","root","width","overflowX","table","minWidth","Board","PostList","classes","state","posts","callApi","response","fetch","body","json","then","res","setState","catch","err","console","log","post","map","p","id","title","content","writer","date","PostView","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport \"./Board.css\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100vh',\r\n        overflowX: \"auto\"\r\n    },\r\n    table: {\r\n        minWidth: \"100vh\"\r\n    }\r\n});\r\n\r\n\r\nexport default function Board() {\r\n   \r\n    return (\r\n        <div id=\"Board\">\r\n            <PostList />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction PostList() {\r\n    const classes = useStyles();\r\n\r\n    state = {\r\n        posts: \"\"\r\n    }\r\n    /*componentDidMount() {\r\n        this.callApi().then(res => this.setState({posts:res}))\r\n        .catch(err => console.log(err));\r\n    }\r\n    */\r\n\r\n    useEffect(() => {\r\n\r\n        callApi = async () => {\r\n            const response = await fetch('/api/post');\r\n            const body = await response.json();\r\n            return body;\r\n        }\r\n\r\n        this.callApi().then(res => this.setState({posts:res}))\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    )\r\n   \r\n\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID!</TableCell>\r\n                        <TableCell>TITLE</TableCell>\r\n                        <TableCell>CONTENT</TableCell>\r\n                        <TableCell>WRITER</TableCell>\r\n                        <TableCell> DATE</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {post.map(p => {\r\n                        return (\r\n                            <PostView id={p.id} title={p.title} content={p.content} writer={p.writer} date={p.date} />\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n\r\n            </Table>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nfunction PostView(props) {\r\n    return (\r\n        <TableRow>\r\n            \r\n            <TableCell>{props.id}</TableCell>\r\n            <TableCell>{props.title}</TableCell>\r\n            <TableCell>{props.content}</TableCell>\r\n            <TableCell>{props.writer}</TableCell>\r\n            <TableCell>{props.date}</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}