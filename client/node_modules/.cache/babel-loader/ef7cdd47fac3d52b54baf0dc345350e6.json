{"ast":null,"code":"import _slicedToArray from \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\src\\\\components\\\\Main\\\\contents\\\\minigame\\\\numberbaseball\\\\Numberbaseball.js\";\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport './Numberbaseball.css';\nexport default function Numberbaseball() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        word = _useState2[0],\n        setWord = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputWord = _useState4[0],\n        setInputWord = _useState4[1];\n\n  const _useState5 = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        numArray = _useState6[0],\n        setNumArray = _useState6[1];\n\n  const _useState7 = useState([{\n    Strike: 0,\n    Ball: 0,\n    Out: 0\n  }]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        answerArray = _useState8[0],\n        setanswerArray = _useState8[1];\n\n  function MakeNumber() {\n    setNumArray([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    let WordArray = [];\n    console.log(\"gd\");\n\n    for (let i = 1; i < 5;) {\n      let iNum = Math.floor(Math.random() * (numArray.length - 1) + 1);\n\n      if (numArray[iNum] === 0) {\n        numArray[iNum] = i++;\n        WordArray.push(iNum);\n        console.log(numArray);\n      }\n    }\n\n    setWord(WordArray);\n    setStrikeArray([]);\n    setBallArray([]);\n    setOutArray([]);\n  }\n\n  if (word === undefined) {\n    MakeNumber();\n  }\n\n  function CheckNumber() {\n    let arr = {\n      Strike: 0,\n      Ball: 0,\n      Out: 0\n    };\n\n    for (let i = 0; i < 4; i++) {\n      let iIdx = word.indexOf(Number(inputWord[i]));\n      console.log(\"IDX : \" + iIdx + \"INPUT : \" + inputWord[i]);\n\n      switch (iIdx) {\n        case i:\n          arr[0]++;\n          break;\n\n        case -1:\n          arr[2]++;\n          break;\n\n        default:\n          arr[1]++;\n          break;\n      }\n    }\n\n    setanswerArray(answerArray.push(arr));\n  }\n\n  function onClickButtonAnswer() {\n    CheckNumber();\n  }\n\n  function onClickButtonReset() {\n    MakeNumber(); //setInputWord(\"여기에 입력하여주세요!\");\n  }\n\n  function onClickInput() {//setInputWord(\"\");\n  }\n\n  function onChangeInput(e) {\n    setInputWord(e.target.value);\n  }\n\n  function onKeyPress(e) {\n    if (e.key === \"Enter\") {\n      CheckNumber();\n    }\n  }\n\n  return React.createElement(\"element\", {\n    id: \"Numberbaseball\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uC22B\\uC790 :: \", word), React.createElement(\"input\", {\n    onKeyPress: onKeyPress,\n    value: inputWord,\n    onChange: onChangeInput,\n    maxLength: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onClickButtonAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"GO!\"), React.createElement(\"button\", {\n    onClick: onClickButtonReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uCD08\\uAE30\\uD654\"), console.log(\"strike : \" + answerArray), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, answerArray > 0 ? answerArray.map(p => {\n    return {\n      p\n    };\n  }) : \"0\", \"Strike!\"));\n}","map":{"version":3,"sources":["G:/Git/GaeTaeng Home/gaetaenghome/client/src/components/Main/contents/minigame/numberbaseball/Numberbaseball.js"],"names":["React","useState","useRef","Numberbaseball","word","setWord","inputWord","setInputWord","numArray","setNumArray","Strike","Ball","Out","answerArray","setanswerArray","MakeNumber","WordArray","console","log","i","iNum","Math","floor","random","length","push","setStrikeArray","setBallArray","setOutArray","undefined","CheckNumber","arr","iIdx","indexOf","Number","onClickButtonAnswer","onClickButtonReset","onClickInput","onChangeInput","e","target","value","onKeyPress","key","map","p"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useRef } from 'react'\r\n\r\nimport './Numberbaseball.css'\r\nexport default function Numberbaseball() {\r\n    const [word, setWord] = useState();\r\n    const [inputWord, setInputWord] = useState(\"\");\r\n    const [numArray, setNumArray] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n    const [answerArray, setanswerArray] = useState([{\r\n        Strike : 0,\r\n        Ball : 0,\r\n        Out : 0\r\n    }])\r\n    function MakeNumber() {\r\n        setNumArray([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        let WordArray = [];\r\n        console.log(\"gd\");\r\n        for (let i = 1; i < 5;) {\r\n            let iNum = Math.floor(Math.random() * (numArray.length - 1) + 1);\r\n            if (numArray[iNum] === 0) {\r\n                numArray[iNum] = i++;\r\n                WordArray.push(iNum);\r\n                console.log(numArray);\r\n            }\r\n        }\r\n        setWord(WordArray);\r\n\r\n        setStrikeArray([]);\r\n        setBallArray([]);\r\n        setOutArray([]);\r\n    }\r\n\r\n    if (word === undefined) {\r\n        MakeNumber();\r\n    }\r\n\r\n    function CheckNumber() {\r\n        let arr = {\r\n            Strike : 0,\r\n            Ball : 0,\r\n            Out : 0\r\n        };\r\n        for (let i = 0; i < 4; i++) {\r\n            let iIdx = word.indexOf(Number(inputWord[i]));\r\n            console.log(\"IDX : \" + iIdx + \"INPUT : \" + inputWord[i]);\r\n            switch (iIdx) {\r\n                case i:\r\n                    arr[0]++;\r\n                    break;\r\n                case -1:\r\n                    arr[2]++;\r\n                    break;\r\n                default:\r\n                    arr[1]++;\r\n                    break;\r\n            }\r\n        }\r\n        setanswerArray(answerArray.push(arr));\r\n        \r\n    }\r\n    function onClickButtonAnswer() {\r\n        CheckNumber();\r\n\r\n    }\r\n    function onClickButtonReset() {\r\n        MakeNumber();\r\n        //setInputWord(\"여기에 입력하여주세요!\");\r\n    }\r\n    function onClickInput() {\r\n        //setInputWord(\"\");\r\n    }\r\n    function onChangeInput(e) {\r\n        setInputWord(e.target.value);\r\n    }\r\n    function onKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            CheckNumber();\r\n        }\r\n    }\r\n    return (\r\n        <element id=\"Numberbaseball\">\r\n            <div>현재 숫자 :: {word}</div>\r\n            <input onKeyPress={onKeyPress} value={inputWord} onChange={onChangeInput} maxLength='4' />\r\n            <button onClick={onClickButtonAnswer}>GO!</button>\r\n            <button onClick={onClickButtonReset}>초기화</button>\r\n            {console.log(\"strike : \" + answerArray)}\r\n            <div>{answerArray > 0 ? answerArray.map( p=> {\r\n                return (\r\n                    {p}\r\n                )\r\n            }) : \"0\"}Strike!\r\n            </div>\r\n        </element>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}