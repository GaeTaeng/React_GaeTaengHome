{"ast":null,"code":"import _slicedToArray from \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\Git\\\\GaeTaeng Home\\\\gaetaenghome\\\\client\\\\src\\\\components\\\\Main\\\\contents\\\\board\\\\Board.js\";\nimport React, { useEffect } from 'react';\nimport \"./Board.css\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme, useState } from 'react';\nconst useStyles = makeStyles({\n  root: {\n    overflowX: \"auto\",\n    maxWidth: '100vh'\n  },\n  table: {\n    minWidth: '100vh'\n  },\n  progress: {//mrgin: theme.spacing.unit * 2,\n  }\n});\nexport default function Board() {\n  console.log(\"Board!!\");\n  return React.createElement(\"div\", {\n    id: \"Board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(PostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\nlet test = 0;\nlet timer = null;\n\nfunction PostList() {\n  const classes = useStyles();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        posts = _useState2[0],\n        setPosts = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        completed = _useState4[0],\n        setCompleted = _useState4[1];\n  /*componentDidMount() {\r\n      this.callApi().then(res => this.setState({posts:res}))\r\n      .catch(err => console.log(err));\r\n  }\r\n  */\n\n\n  async function callAPI() {\n    const response = await fetch('/api/contents');\n    const body = await response.json();\n    console.log(\"BODY : \" + body);\n    return body;\n  }\n\n  function progress() {\n    console.log(\"Board Interval\" + completed);\n    setCompleted(completed >= 100 ? 0 : completed + 1);\n  }\n\n  console.log(\"PostList!!\");\n  useEffect(() => {\n    console.log(\"callAPI. . .\" + timer); //if(timer === null)\n\n    timer = setInterval(progress(), 20);\n  });\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"ID!\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"TITLE\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"CONTENT\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"WRITER\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" DATE\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, posts ? console.log(posts) : console.log(\"posts is Null\"), posts ? posts.map((p, index) => {\n    return React.createElement(PostView, {\n      key: index,\n      id: p.id,\n      title: p.title,\n      content: p.content,\n      writer: p.writer,\n      date: p.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }) : React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: \"5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))))));\n}\n\nfunction PostView(props) {\n  return React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.id), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, props.title), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.content), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.writer), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.date));\n}","map":{"version":3,"sources":["G:/Git/GaeTaeng Home/gaetaenghome/client/src/components/Main/contents/board/Board.js"],"names":["React","useEffect","Paper","Table","TableHead","TableBody","TableRow","TableCell","CircularProgress","makeStyles","useTheme","useState","useStyles","root","overflowX","maxWidth","table","minWidth","progress","Board","console","log","test","timer","PostList","classes","posts","setPosts","completed","setCompleted","callAPI","response","fetch","body","json","setInterval","map","p","index","id","title","content","writer","date","PostView","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport \"./Board.css\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme, useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        overflowX: \"auto\",\r\n        maxWidth: '100vh',\r\n    },\r\n    table: {\r\n        minWidth: '100vh',\r\n    },\r\n    progress: {\r\n        //mrgin: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\n\r\nexport default function Board() {\r\n\r\n    console.log(\"Board!!\");\r\n    return (\r\n        <div id=\"Board\">\r\n            <PostList />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet test = 0;\r\nlet timer = null;\r\n\r\nfunction PostList() {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState(\"\");\r\n    const [completed, setCompleted] = useState(0);\r\n    /*componentDidMount() {\r\n        this.callApi().then(res => this.setState({posts:res}))\r\n        .catch(err => console.log(err));\r\n    }\r\n    */\r\n\r\n    async function callAPI() {\r\n        const response = await fetch('/api/contents');\r\n        const body = await response.json();\r\n        console.log(\"BODY : \" + body);\r\n        return body;\r\n    }\r\n    function progress() {\r\n        console.log(\"Board Interval\" + completed);\r\n        setCompleted(completed >= 100 ? 0 : completed + 1);\r\n    }\r\n    console.log(\"PostList!!\");\r\n    useEffect(() => {\r\n        console.log(\"callAPI. . .\" + timer);\r\n        //if(timer === null)\r\n        timer = setInterval(progress(), 20);\r\n\r\n    });\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID!</TableCell>\r\n                        <TableCell>TITLE</TableCell>\r\n                        <TableCell>CONTENT</TableCell>\r\n                        <TableCell>WRITER</TableCell>\r\n                        <TableCell> DATE</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {posts ? console.log(posts) : console.log(\"posts is Null\")}\r\n                    {posts ? posts.map((p, index) => {\r\n                        return (\r\n                            <PostView key={index} id={p.id} title={p.title} content={p.content} writer={p.writer} date={p.date} />\r\n                        )\r\n                    }) :\r\n                        <TableRow>\r\n                            <TableCell colSpan='5' align=\"center\">\r\n                                <CircularProgress className={classes.progress} variant=\"determinate\" value={completed} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    }\r\n                </TableBody>\r\n\r\n            </Table>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nfunction PostView(props) {\r\n    return (\r\n        <TableRow>\r\n\r\n            <TableCell>{props.id}</TableCell>\r\n            <TableCell>{props.title}</TableCell>\r\n            <TableCell>{props.content}</TableCell>\r\n            <TableCell>{props.writer}</TableCell>\r\n            <TableCell>{props.date}</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}