{"version":3,"sources":["components/Main/navigation/Timer.js","components/Main/navigation/Menu.js","components/Main/navigation/Navigation.js","components/Main/contents/Banner.js","components/Main/contents/board/Board.js","components/Main/contents/home/Home.js","components/Main/contents/minigame/shiritori/Shiritori.js","components/Main/contents/minigame/numberbaseball/Numberbaseball.js","components/Main/contents/minigame/MiniGame.js","components/Main/contents/Contents.js","App.js","serviceWorker.js","index.js"],"names":["Timer","useState","date","setDate","useEffect","timeID","setInterval","Date","toLocaleTimeString","clearInterval","id","Menu","props","CheckMenu","Address","Content","onClick","window","open","Navigation","MenuIdx","Banner","useStyles","makeStyles","root","overflowX","maxWidth","table","minWidth","progress","Board","console","log","PostList","classes","posts","setPosts","completed","setCompleted","timer","setTimer","clear","oldCompleted","a","async","fetch","response","json","body","callAPI","then","Paper","className","Table","TableHead","TableRow","TableCell","TableBody","map","p","index","PostView","key","title","content","writer","finish","colSpan","align","CircularProgress","variant","value","Home","Shiritori","word","setWord","inputWord","setInputWord","result","setResult","inputRef","useRef","wordList","subList","onCheckAnswer","length","push","current","focus","ref","onChange","e","target","onKeyPress","maxLength","minLength","Numberbaseball","numArray","setNumArray","strikeArray","setStrikeArray","ballArray","setBallArray","outArray","setOutArray","MakeNumber","WordArray","i","iNum","Math","floor","random","CheckNumber","arr","iIdx","indexOf","Number","undefined","MiniGame","Contents","App","state","setState","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd87009e.chunk.js","sourcesContent":["import React, { useState, useEffect }  from 'react';\r\nimport './Timer.css'\r\nfunction Timer() {\r\n\r\n    const [date, setDate] = useState(\"Wait! Timer\");\r\n    function Change() {\r\n      setDate(new Date().toLocaleTimeString());\r\n      //componentWIllUnmount();\r\n    }\r\n    useEffect(() => {\r\n      const timeID = setInterval(\r\n        () => Change(), 1000\r\n      )\r\n      return () => clearInterval(timeID);\r\n    },[])\r\n    return(\r\n      <div id=\"timer\">\r\n        <div id=\"menu\">{date}</div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Timer","import React from 'react'\r\n\r\nimport './Menu.css';\r\n\r\n\r\nfunction Menu(props) {\r\n    //props.onClickNav();\r\n    //여기서 STATE를 만들고\r\n    const {CheckMenu, Address, Content} = props;\r\n    return (\r\n        <element id=\"MenuButton\">\r\n        <button onClick = {() => CheckMenu(Content)}>\r\n                <div>\r\n                    {Content}\r\n                </div>\r\n                {Address !== '/'? () => window.open(Address) : \"\"}\r\n                \r\n        </button>\r\n        </element>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nimport Timer from './Timer'\r\nimport Menu from './Menu'\r\nfunction Navigation(props) {\r\n    var MenuIdx = 1;\r\n  return (\r\n    <div id=\"Navigation\">\r\n      <Timer />\r\n      <div id=\"MenuList\">\r\n\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"HOME\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        {/* <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"PROFILE\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr /> */}\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"MINIGAME\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"BOARD\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"https://github.com/GaeTaeng?tab=repositories\"\r\n          Content=\"Github\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"https://www.linkedin.com/in/tae-hun-kim-434552168/\"\r\n          Content=\"LinkedIn\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Navigation","import React from 'react'\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n    return(\r\n        <div id=\"banner\">\r\n                This Point is Banner(브루스 배너 아님)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner","import React, { useEffect } from 'react';\r\nimport \"./Board.css\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        overflowX: \"auto\",\r\n        maxWidth: '100vh',\r\n    },\r\n    table: {\r\n        minWidth: '100vh',\r\n    },\r\n    progress: {\r\n        //mrgin: theme.spacing.unit * 2,\r\n    },\r\n});\r\nexport default function Board() {\r\n\r\n    console.log(\"Board!!\");\r\n    return (\r\n        <div id=\"Board\">\r\n            <PostList />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PostList() {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState(\"\");\r\n    const [completed, setCompleted] = useState(0);\r\n    const [timer, setTimer] = useState(null);\r\n    async function callAPI() {\r\n        const response = await fetch('/api/contents');\r\n        const body = await response.json();\r\n        console.log(\"BODY : \" + body);\r\n        return body;\r\n    }\r\n\r\n    function clear() {\r\n        clearInterval(timer);\r\n        console.log(\"CLEAR! timer \" + timer);\r\n    }\r\n    useEffect(() => {\r\n        function tick() {\r\n            var oldCompleted = completed;\r\n            setCompleted((oldCompleted) => (oldCompleted >= 100 ? 0 : oldCompleted + 1));\r\n        }\r\n        setTimer(setInterval(tick, 20));\r\n        console.log(\"timer ::: \" + timer)\r\n        callAPI().then(setPosts);\r\n         return () => {\r\n             clear();\r\n         }\r\n    }, []);\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID!</TableCell>\r\n                        <TableCell>TITLE</TableCell>\r\n                        <TableCell>CONTENT</TableCell>\r\n                        <TableCell>WRITER</TableCell>\r\n                        <TableCell> DATE</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {posts ? console.log(posts) : console.log(\"posts is Null\")}\r\n                    {posts ? posts.map((p, index) => {\r\n                        return (\r\n                            <PostView key={index} id={p.id} title={p.title} content={p.content} writer={p.writer} date={p.date} finish={clear()} />\r\n                        )\r\n                    }) :\r\n                        <TableRow>\r\n                            <TableCell colSpan='5' align=\"center\">\r\n                                <CircularProgress variant=\"determinate\" value={completed} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    }\r\n                </TableBody>\r\n\r\n            </Table>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nfunction PostView(props) {\r\n    return (\r\n        <TableRow>\r\n\r\n            <TableCell>{props.id}</TableCell>\r\n            <TableCell>{props.title}</TableCell>\r\n            <TableCell>{props.content}</TableCell>\r\n            <TableCell>{props.writer}</TableCell>\r\n            <TableCell>{props.date}</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport './Home.css'\r\nexport default function Home() {\r\n    return(\r\n        <element id=\"home\">\r\n        <div>\r\n            <div className=\"FOOOOO\">공 사 중</div>\r\n            Hello~ World! <br />\r\n            <div className=\"taeng\">Welcome GaeTaeng's House!</div> <br />\r\n            HOME 메인 화면입니다!<br/>나중에 따로 설계하여 구현 예정인 페이지입니다. <br />\r\n        </div>\r\n        </element>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './Shiritori.css'\r\nimport {useState, useRef } from 'react'\r\nexport default function Shiritori() {\r\n    const [word, setWord] = useState(\"시작\");\r\n    const [inputWord, setInputWord] = useState(\"여기에 입력하여주세요!\");\r\n    const [result, setResult] = useState('');\r\n    const inputRef = useRef(null);\r\n    const [wordList, setWordList] = useState([]);\r\n    let subList = [];\r\n    function onCheckAnswer() {\r\n        if (word[word.length - 1] === inputWord[0]) {\r\n            setResult(\"정답!\");\r\n            setWord(inputWord);\r\n            setInputWord('');\r\n            subList.push(inputWord); \r\n            //console.log(\"정답!SUB\" + subList.length);\r\n            wordList.push(inputWord);\r\n            //setWordList(...wordList+inputWord);\r\n            console.log(wordList);\r\n            //console.log(\"정답!\" + wordList.length);\r\n        } else {\r\n            console.log(wordList.length);\r\n            setResult(\"오답!\");\r\n            setInputWord('');\r\n        }\r\n\r\n        inputRef.current.focus();\r\n    }\r\n    function onChangeInput(e) {\r\n        setInputWord(e.target.value);\r\n    }\r\n    function onClickInput() {\r\n        setInputWord(\"\");\r\n    }\r\n    function onKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            onCheckAnswer();\r\n        }\r\n    }\r\n    return (\r\n        <element id=\"Shiritori\">\r\n            <div>끝말잇기 ------</div>\r\n            <div className = \"Shiritori\">\r\n                <div>현재단어 : </div><div className=\"word\">{word}</div>\r\n                    <input ref={inputRef} value={inputWord} onChange={onChangeInput} onClick={onClickInput} onKeyPress={onKeyPress} maxLength='4' minLength='2'/>\r\n                    <button onClick={onCheckAnswer}>PASS!</button>\r\n                <div>{result}</div>\r\n                <div>정답 개수 : {wordList.length}</div>\r\n               <div>\r\n                {wordList ? wordList.map( p => {\r\n                    return (\r\n                        <div>{p}</div>\r\n                    )\r\n                }\r\n                ) : \"정답이 없습니다.\"}\r\n                </div>\r\n            </div>\r\n        </element>\r\n    )\r\n}","import React from 'react'\r\nimport { useState, useRef } from 'react'\r\n\r\nimport './Numberbaseball.css'\r\nexport default function Numberbaseball() {\r\n    const [word, setWord] = useState();\r\n    const [inputWord, setInputWord] = useState(\"\");\r\n    const [numArray, setNumArray] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n    const [strikeArray, setStrikeArray] = useState([]);\r\n    const [ballArray, setBallArray] = useState([]);\r\n    const [outArray, setOutArray] = useState([]);\r\n\r\n    const inputRef = useRef(null);\r\n    console.log(\"WORLD Strike\")\r\n    console.log(strikeArray);\r\n\r\n    function MakeNumber() {\r\n        setNumArray([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        let WordArray = [];\r\n        console.log(\"gd\");\r\n        for (let i = 1; i < 5;) {\r\n            let iNum = Math.floor(Math.random() * (numArray.length - 1) + 1);\r\n            if (numArray[iNum] === 0) {\r\n                numArray[iNum] = i++;\r\n                WordArray.push(iNum);\r\n                console.log(numArray);\r\n            }\r\n        }\r\n        setWord(WordArray);\r\n\r\n        setStrikeArray([]);\r\n        console.log(\"MakeNumber Strike\")\r\n        console.log(strikeArray);\r\n        setBallArray([]);\r\n        setOutArray([]);\r\n    }\r\n\r\n    if (word === undefined) {\r\n        MakeNumber();\r\n    }\r\n\r\n    function CheckNumber() {\r\n        console.log(\"CheckNumber start Strike\")\r\n        console.log(strikeArray);\r\n        let arr = [0, 0, 0];\r\n        for (let i = 0; i < 4; i++) {\r\n            let iIdx = word.indexOf(Number(inputWord[i]));\r\n            console.log(\"IDX : \" + iIdx + \"INPUT : \" + inputWord[i]);\r\n            switch (iIdx) {\r\n                case i:\r\n                    arr[0]++;\r\n                    break;\r\n                case -1:\r\n                    arr[2]++;\r\n                    break;\r\n                default:\r\n                    arr[1]++;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        setStrikeArray(\r\n            [\r\n                ...strikeArray, arr[0]\r\n            ]\r\n        );\r\n        console.log(arr[0]);\r\n        setBallArray(\r\n            [\r\n                ...ballArray, arr[1]\r\n            ]\r\n        );\r\n        setOutArray(\r\n            [\r\n                ...outArray, arr[2]\r\n            ]\r\n        );\r\n\r\n\r\n        console.log(\"CheckNum : \");\r\n        console.log(strikeArray);\r\n        console.log(ballArray);\r\n        console.log(outArray);\r\n    }\r\n    function onClickButtonAnswer() {\r\n        CheckNumber();\r\n\r\n    }\r\n    function onClickButtonReset() {\r\n        MakeNumber();\r\n        setInputWord('');\r\n    }\r\n    function onChangeInput(e) {\r\n        setInputWord(e.target.value);\r\n    }\r\n    function onKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            CheckNumber();\r\n            setInputWord('');\r\n        }\r\n    }\r\n    return (\r\n        <element id=\"Numberbaseball\">\r\n            <div>숫자야구게임 ----</div>\r\n            <div className=\"Numberbaseball\">\r\n                <div>현재 숫자 :: {word}</div>\r\n                <input ref={inputRef} onKeyPress={onKeyPress} value={inputWord} onChange={onChangeInput} maxLength='4' />\r\n                <button onClick={onClickButtonAnswer}>GO!</button>\r\n                <button onClick={onClickButtonReset}>초기화</button>\r\n                {console.log(\"MAIN Strike\")}\r\n                {console.log(strikeArray)}\r\n                \r\n                <div>{(strikeArray.length > 0) ? strikeArray.map((p,index) => {\r\n                    if(p == 4) {\r\n                        return (\r\n                            <div>4Strike!!!! 홈런입니다 !!!!<br/>초기화 버튼을 눌러 다시 진행하여 주세요!</div>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <div>{p}Strike!\r\n                          {ballArray[index]}Ball!\r\n                          {outArray[index]}Out!\r\n                        </div>\r\n                    )\r\n                }) : \"0Strike!\"}\r\n                  \r\n                </div>\r\n            </div>\r\n        </element>\r\n    )\r\n}","import React from 'react'\r\nimport \"./MiniGame.css\"\r\nimport './shiritori/Shiritori'\r\n\r\nimport Shiritori from './shiritori/Shiritori'\r\nimport Numberbaseball from './numberbaseball/Numberbaseball'\r\n\r\nexport default function MiniGame() {\r\n    return (\r\n        <element id=\"MiniGame\">\r\n\r\n           \r\n            <Shiritori />\r\n            <Numberbaseball />\r\n        </element>\r\n    )\r\n}","import React from 'react';\r\nimport Banner from './Banner';\r\nimport Board from './board/Board';\r\nimport Home from './home/Home'\r\nimport MiniGame from './minigame/MiniGame'\r\nfunction Contents(props) {\r\n    return (\r\n        <div>\r\n            <Banner />\r\n            {\r\n            props.CheckMenu === \"HOME\" ? (<Home />) : \r\n            props.CheckMenu === \"BOARD\" ? (<Board />) :\r\n            props.CheckMenu === \"MINIGAME\" ? (<MiniGame />) :\r\n             <div>Start ! { props.CheckMenu } 추후 구현 예정인 메뉴입니다.</div> }\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Contents;","\nimport React from 'react';\nimport './App.css';\n\nimport Navigation from './components/Main/navigation/Navigation'\n\nimport Contents from './components/Main/contents/Contents'\n\nimport { useState } from 'react';\n\nfunction App(props) {\n  const [state, setState] = useState(\"HOME\");\n\n  console.log(\"Start App\");\n  var CheckMenu = (iNum) => {\n    setState(iNum);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navigation CheckMenu = {CheckMenu}/>\n      <Contents CheckMenu = {state}/>\n      \n      {/* <Contents /> */}\n      \n      <div id=\"bottom\">\n        make with React_Node.js\n        GaeTaeng's Home <br />\n        Naver : 000000@naver.com <br />\n        GMail : 000000@gmail.com <br />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}