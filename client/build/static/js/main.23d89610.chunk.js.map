{"version":3,"sources":["components/Main/contents/home/gaetaeng.gif","components/Main/navigation/Timer.js","components/Main/navigation/Menu.js","components/Main/navigation/Navigation.js","components/Main/contents/Banner.js","components/Main/contents/board/NewPost.js","components/Main/contents/board/Board.js","components/Main/contents/home/Home.js","components/Main/contents/minigame/shiritori/Shiritori.js","components/Main/contents/minigame/numberbaseball/Numberbaseball.js","components/Main/contents/minigame/MiniGame.js","components/Main/contents/PatchNote.js","components/Main/contents/Contents.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","useState","date","setDate","useEffect","timeID","setInterval","Date","toLocaleTimeString","clearInterval","id","Menu","props","CheckMenu","Address","Content","onClick","window","open","Navigation","MenuIdx","_width","setWidth","_position","setPosition","navstyle","width","height","position","onScreenCheck","screenwidth","innerWidth","console","log","addEventListener","style","Banner","NewPost","checkstate","initialFormState","title","contents","writer","post","setPost","handleInputChange","event","target","handleSubmit","a","preventDefault","fetch","method","body","JSON","stringify","onSubmit","value","type","name","onChange","useStyles","makeStyles","root","overflowX","maxWidth","marginLeft","table","minWidth","Board","PostList","classes","posts","setPosts","completed","setCompleted","timer","setTimer","setcheckState","response","json","clearTimer","alert","oldCompleted","callAPI","then","Paper","className","Table","TableHead","TableRow","TableCell","TableBody","map","p","index","PostView","key","content","finish","colSpan","align","CircularProgress","variant","SELECTSTATE","gifsrc","require","Home","src","Shiritori","word","setWord","inputWord","setInputWord","result","setResult","inputRef","useRef","wordList","subList","onCheckAnswer","length","push","current","focus","ref","e","onKeyPress","maxLength","minLength","Numberbaseball","numArray","setNumArray","strikeArray","setStrikeArray","ballArray","setBallArray","outArray","setOutArray","numberArray","MakeNumber","WordArray","i","iNum","Math","floor","random","CheckNumber","arr","iIdx","indexOf","Number","undefined","MiniGame","PatchNote","Contents","App","state","setState","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23d89610.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gaetaeng.0bc93d60.gif\";","import React, { useState, useEffect }  from 'react';\r\nimport './Timer.css'\r\nfunction Timer() {\r\n\r\n    const [date, setDate] = useState(\"Wait! Timer\");\r\n    function Change() {\r\n      setDate(new Date().toLocaleTimeString());\r\n      //componentWIllUnmount();\r\n    }\r\n    useEffect(() => {\r\n      const timeID = setInterval(\r\n        () => Change(), 1000\r\n      )\r\n      return () => clearInterval(timeID);\r\n    },[])\r\n    return(\r\n      <div id=\"timer\">\r\n        <div id=\"menu\">{date}</div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Timer","import React from 'react'\r\n\r\nimport './Menu.css';\r\n\r\n\r\nfunction Menu(props) {\r\n    //props.onClickNav();\r\n    //여기서 STATE를 만들고\r\n    const {CheckMenu, Address, Content} = props;\r\n    return (\r\n        <element id=\"MenuButton\">\r\n        <button onClick = {() => CheckMenu(Content)}>\r\n                <div>\r\n                    {Content}\r\n                </div>\r\n                {Address !== '/'? () => window.open(Address) : \"\"}\r\n                \r\n        </button>\r\n        </element>\r\n    )\r\n}\r\n\r\nexport default Menu","import React, {useEffect, useState} from 'react';\r\nimport './Navigation.css';\r\n\r\nimport Timer from './Timer'\r\nimport Menu from './Menu'\r\n\r\n\r\nfunction Navigation(props) {\r\n    var MenuIdx = 1;\r\n    const [_width, setWidth] = useState('180px');\r\n    const [_position, setPosition] = useState('absolute');\r\n    const navstyle= {\r\n      width: _width,\r\n      height:'92.7vh',\r\n      position:_position,\r\n    };\r\n    \r\n    const onScreenCheck = () => {\r\n      const screenwidth = window.innerWidth;\r\n      console.log(screenwidth);\r\n      let screenSize = screenwidth < 800 ? setWidth('0px') : setWidth('180px');\r\n      screenSize = screenwidth < 800 ? setPosition('fixed') : setPosition('absolute');\r\n    }\r\n\r\n    useEffect(() => {\r\n      onScreenCheck();\r\n      window.addEventListener('resize', onScreenCheck);\r\n  }, [])\r\n\r\n  return (\r\n    <div id=\"Navigation\" style = {navstyle}>\r\n\r\n      <Timer />\r\n      <div id=\"MenuList\">\r\n\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"HOME\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        {/* <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"PROFILE\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr /> */}\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"MINIGAME\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"/\"\r\n          Content=\"BOARD\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"https://github.com/GaeTaeng?tab=repositories\"\r\n          Content=\"Github\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        <Menu\r\n          MenuIdx={MenuIdx++}\r\n          Address=\"https://www.linkedin.com/in/tae-hun-kim-434552168/\"\r\n          Content=\"LinkedIn\"\r\n          CheckMenu = {props.CheckMenu}\r\n        />\r\n        <hr />\r\n        <Menu\r\n        MenuIdx={MenuIdx++}\r\n        Address=\"/\"\r\n        Content=\"PatchNote\"\r\n        CheckMenu = {props.CheckMenu}\r\n      />\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Navigation","import React from 'react'\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n    return(\r\n        <div id=\"banner\">\r\n                This Point is Banner(브루스 배너 아님)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner","import React, {useRef, useState, useForm} from 'react'\r\n\r\nexport default function NewPost(props) {\r\n    const {checkstate} = props;\r\n    const initialFormState = {title: '', contents: '', writer: ''};\r\n\r\n    const [post, setPost] = useState(initialFormState);\r\n    function handleInputChange(event) {\r\n        const {title, writer, contents} = event.target;\r\n        setPost({[title]:title, [contents]:contents, [writer]:writer});\r\n    }\r\n\r\nasync function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const response = await fetch('http://gaetaeng.com:5000/api/contents', {\r\n        method: 'POST',\r\n        body:JSON.stringify(post)\r\n    });\r\n    \r\n    setPost(initialFormState)\r\n    checkstate(\"GITHUB\");\r\n    checkstate(\"BOARD\");\r\n}\r\n\r\n    function onclickCancle() {\r\n        setPost(initialFormState)\r\n        checkstate(\"GITHUB\");\r\n        checkstate(\"BOARD\");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form  onSubmit={handleSubmit}>\r\n            아직 구현 중 !!!! <br />\r\n            제목 : <input value={post.title} type=\"text\" name=\"title\" onChange={handleInputChange}/>\r\n            작성자 : <input value = {post.writer} type=\"text\" name=\"writer\" onChange={handleInputChange}/>\r\n            <br />\r\n            내용 : <input value={post.contents} type=\"text\" name=\"contents\" onChange={handleInputChange}/>\r\n            <br />\r\n            <button onClick={handleSubmit}>등록</button> <button onClick = {onclickCancle}>취소</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport \"./Board.css\";\r\nimport \"./NewPost\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\nimport NewPost from './NewPost';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        overflowX: \"auto\",\r\n        maxWidth: '100vh',\r\n        marginLeft:'25%',\r\n        },\r\n    table: {\r\n        minWidth: '100vh',\r\n    },\r\n});\r\nexport default function Board() {\r\n\r\n    console.log(\"Board!!\");\r\n    return (\r\n        <div id=\"Board\">\r\n            <PostList />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PostList() {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState(\"\");\r\n    const [completed, setCompleted] = useState(0);\r\n    const [timer, setTimer] = useState(null);\r\n    const [checkstate, setcheckState] = useState(\"BOARD\");\r\n    async function callAPI() {\r\n        const response = await fetch('http://gaetaeng.com:5000/api/contents');\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n    function clearTimer() {\r\n        clearInterval(timer);\r\n        console.log(\"CLEAR! timer \" + timer);\r\n    }\r\n    useEffect(() => {\r\n        function tick() {\r\n            let oldCompleted = completed;\r\n            setCompleted((oldCompleted) => (oldCompleted >= 100 ? 0 : oldCompleted + 1));\r\n        }\r\n        setTimer(setInterval(tick, 20));\r\n        console.log(\"timer ::: \" + timer)\r\n        callAPI().then(setPosts);\r\n         return () => {\r\n            clearTimer();\r\n         }\r\n    }, []);\r\n    function onClickCreatePost() {\r\n        setcheckState(\"NEW\");\r\n    }\r\n    async function onClickDeletePost() {\r\n        alert(\"undefined 에러인 게시물들을 삭제하였습니다.\");\r\n        const response = await fetch('http://gaetaeng.com:5000/api/contentsdelete');\r\n    }\r\n\r\n    var checkStateval = (SELECTSTATE) => {\r\n        setcheckState(SELECTSTATE);\r\n      }\r\n    return (\r\n        <div>\r\n            {checkstate === \"BOARD\" ?\r\n        <Paper className={classes.root}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>Mysql(MariaDB) + Material UI를 사용하였습니다.</TableRow>\r\n                </TableHead>\r\n            </Table>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID!</TableCell>\r\n                        <TableCell>TITLE</TableCell>\r\n                        <TableCell>CONTENT</TableCell>\r\n                        <TableCell>WRITER</TableCell>\r\n                        <TableCell> DATE</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {posts ? console.log(posts) : console.log(\"posts is Null\")}\r\n                    {posts ? posts.map((p, index) => {\r\n                        return (\r\n                            <PostView key={index} id={p.id} title={p.title} content={p.content} writer={p.writer} date={p.date} finish={clearTimer()} />\r\n                        )\r\n                    }) :\r\n                        <TableRow>\r\n                            <TableCell colSpan='5' align=\"center\">\r\n                                <CircularProgress variant=\"determinate\" value={completed} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    }\r\n                </TableBody>\r\n\r\n            </Table>\r\n            <button onClick = {onClickCreatePost}>글쓰기</button>\r\n            <button onClick = {onClickDeletePost}>에러삭제</button>\r\n        </Paper>\r\n        :\r\n        <div id=\"newPost\">\r\n        <NewPost checkstate={checkStateval}/>\r\n        </div>\r\n        }\r\n        {console.log(checkstate)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PostView(props) {\r\n    return (\r\n        <TableRow>\r\n\r\n            <TableCell>{props.id}</TableCell>\r\n            <TableCell>{props.title}</TableCell>\r\n            <TableCell>{props.content}</TableCell>\r\n            <TableCell>{props.writer}</TableCell>\r\n            <TableCell>{props.date}</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Home.css'\r\nlet gifsrc = require('./gaetaeng.gif');\r\nexport default function Home() {\r\n    return(\r\n        <element id=\"home\">\r\n        <div className=\"homeGroup\">\r\n            <div className=\"FOOOOO\">공 사 중 !</div>\r\n            <img src={gifsrc} />\r\n            <div className=\"taeng\">Welcome GaeTaeng's House!</div> <br />\r\n            HOME 메인 화면입니다!<br/>나중에 따로 설계하여 구현 예정인 페이지입니다. <br />\r\n\r\n        </div>\r\n        </element>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './Shiritori.css'\r\nimport {useState, useRef } from 'react'\r\nexport default function Shiritori() {\r\n    const [word, setWord] = useState(\"시작\");\r\n    const [inputWord, setInputWord] = useState(\"여기에 입력하여주세요!\");\r\n    const [result, setResult] = useState('');\r\n    const inputRef = useRef(null);\r\n    const [wordList, setWordList] = useState([]);\r\n    let subList = [];\r\n    function onCheckAnswer() {\r\n        if (word[word.length - 1] === inputWord[0]) {\r\n            setResult(\"정답!\");\r\n            setWord(inputWord);\r\n            setInputWord('');\r\n            subList.push(inputWord); \r\n            //console.log(\"정답!SUB\" + subList.length);\r\n            wordList.push(inputWord);\r\n            //setWordList(...wordList+inputWord);\r\n            console.log(wordList);\r\n            //console.log(\"정답!\" + wordList.length);\r\n        } else {\r\n            console.log(wordList.length);\r\n            setResult(\"오답!\");\r\n            setInputWord('');\r\n        }\r\n\r\n        inputRef.current.focus();\r\n    }\r\n    function onChangeInput(e) {\r\n        setInputWord(e.target.value);\r\n    }\r\n    function onClickInput() {\r\n        setInputWord(\"\");\r\n    }\r\n    function onKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            onCheckAnswer();\r\n        }\r\n    }\r\n    return (\r\n        <element id=\"Shiritori\">\r\n            <div>끝말잇기 ------</div>\r\n            <div className = \"Shiritori\">\r\n                <div>현재단어 : </div><div className=\"word\">{word}</div>\r\n                    <input ref={inputRef} value={inputWord} onChange={onChangeInput} onClick={onClickInput} onKeyPress={onKeyPress} maxLength='4' minLength='2'/>\r\n                    <button onClick={onCheckAnswer}>PASS!</button>\r\n                <div>{result}</div>\r\n                <div>정답 개수 : {wordList.length}</div>\r\n               <div>\r\n                {wordList ? wordList.map( p => {\r\n                    return (\r\n                        <div>{p}</div>\r\n                    )\r\n                }\r\n                ) : \"정답이 없습니다.\"}\r\n                </div>\r\n            </div>\r\n        </element>\r\n    )\r\n}","import React from 'react'\r\nimport { useState, useRef } from 'react'\r\n\r\nimport './Numberbaseball.css'\r\nexport default function Numberbaseball() {\r\n    const [word, setWord] = useState();\r\n    const [inputWord, setInputWord] = useState(\"\");\r\n    const [numArray, setNumArray] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n    const [strikeArray, setStrikeArray] = useState([]);\r\n    const [ballArray, setBallArray] = useState([]);\r\n    const [outArray, setOutArray] = useState([]);\r\n    const [numberArray, setnumberArray] = useState([]);\r\n    const inputRef = useRef(null);\r\n    console.log(\"WORLD Strike\")\r\n    console.log(strikeArray);\r\n\r\n    function MakeNumber() {\r\n        setNumArray([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        let WordArray = [];\r\n        console.log(\"gd\");\r\n        for (let i = 1; i < 5;) {\r\n            let iNum = Math.floor(Math.random() * (numArray.length - 1) + 1);\r\n            if (numArray[iNum] === 0) {\r\n                numArray[iNum] = i++;\r\n                WordArray.push(iNum);\r\n                console.log(numArray);\r\n            }\r\n        }\r\n        setWord(WordArray);\r\n\r\n        setStrikeArray([]);\r\n        console.log(\"MakeNumber Strike\")\r\n        console.log(strikeArray);\r\n        setBallArray([]);\r\n        setOutArray([]);\r\n    }\r\n\r\n    if (word === undefined) {\r\n        MakeNumber();\r\n    }\r\n\r\n    function CheckNumber() {\r\n        numberArray.push(inputWord);\r\n        console.log(\"CheckNumber start Strike\")\r\n        console.log(strikeArray);\r\n        let arr = [0, 0, 0];\r\n        for (let i = 0; i < 4; i++) {\r\n            let iIdx = word.indexOf(Number(inputWord[i]));\r\n            console.log(\"IDX : \" + iIdx + \"INPUT : \" + inputWord[i]);\r\n            switch (iIdx) {\r\n                case i:\r\n                    arr[0]++;\r\n                    break;\r\n                case -1:\r\n                    arr[2]++;\r\n                    break;\r\n                default:\r\n                    arr[1]++;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        setStrikeArray(\r\n            [\r\n                ...strikeArray, arr[0]\r\n            ]\r\n        );\r\n        console.log(arr[0]);\r\n        setBallArray(\r\n            [\r\n                ...ballArray, arr[1]\r\n            ]\r\n        );\r\n        setOutArray(\r\n            [\r\n                ...outArray, arr[2]\r\n            ]\r\n        );\r\n\r\n\r\n        console.log(\"CheckNum : \");\r\n        console.log(strikeArray);\r\n        console.log(ballArray);\r\n        console.log(outArray);\r\n    }\r\n    function onClickButtonAnswer() {\r\n        CheckNumber();\r\n        inputRef.current.focus();\r\n\r\n    }\r\n    function onClickButtonReset() {\r\n        MakeNumber();\r\n        setInputWord('');\r\n    }\r\n    function onChangeInput(e) {\r\n        setInputWord(e.target.value);\r\n        inputRef.current.focus();\r\n    }\r\n    function onKeyPress(e) {\r\n        if (e.key === \"Enter\") {\r\n            CheckNumber();\r\n            setInputWord('');\r\n        }\r\n    }\r\n    function onClickButtonexplains(e) {\r\n        alert(\"\\\r\n랜덤한 중복되지않는 숫자 4자리가 지정될겁니다.(ex 1245)\\n\\\r\n(그 4자리 숫자의 위치까지 정확히 맞추면 정답!)\\n\\\r\n예상하는 숫자를 입력한 후 GO! 클릭\\n\\\r\n- 같은자리 같은 숫자면 Strike!\\n\\\r\n- 다른자리 같은 숫자면 Ball!\\n\\\r\n- 다른자리 없는 숫자면 Out!\\n\\\r\nex)(1245기준)1437 입력시 \\n\\\r\n1Strike! 1Ball! 2Out!\\\r\n\")\r\n    }\r\n    return (\r\n        <element id=\"Numberbaseball\">\r\n            <div>숫자야구게임 ----</div>\r\n            <div className=\"Numberbaseball\">\r\n                <input ref={inputRef} onKeyPress={onKeyPress} value={inputWord} onChange={onChangeInput} maxLength='4' />\r\n                <button onClick={onClickButtonAnswer}>GO!</button>\r\n                <button onClick={onClickButtonReset}>초기화</button>\r\n                <button onClick={onClickButtonexplains}>설명서</button>\r\n                {console.log(\"MAIN Strike\")}\r\n                {console.log(strikeArray)}\r\n                \r\n                <div>{(strikeArray.length > 0) ? strikeArray.map((p,index) => {\r\n                    if(p === 4) {\r\n                        return (\r\n                            <div>정답 숫자 :: {word} 4Strike!!!! 홈런입니다 !!!!<br/>초기화 버튼을 눌러 다시 진행하여 주세요!</div>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <div>{p}Strike!\r\n                          {ballArray[index]}Ball!\r\n                          {outArray[index]}Out!\r\n                             ///   {numberArray[index]}\r\n                        </div>\r\n                    )\r\n                }) : \"0Strike!\"}\r\n                  \r\n                </div>\r\n            </div>\r\n        </element>\r\n    )\r\n}","import React from 'react'\r\nimport \"./MiniGame.css\"\r\nimport './shiritori/Shiritori'\r\n\r\nimport Shiritori from './shiritori/Shiritori'\r\nimport Numberbaseball from './numberbaseball/Numberbaseball'\r\n\r\nexport default function MiniGame() {\r\n    return (\r\n        <element id=\"MiniGame\">\r\n\r\n           \r\n           <div className=\"games\">\r\n               <div>\r\n               각 게임들은 js개발 공부를 위하여 추가한 내용들 입니다. <br/>\r\n                재미로 이용하여 주세요 ^^ <br/><br/>\r\n           </div>\r\n            <Numberbaseball />\r\n            <Shiritori />\r\n            </div>\r\n        </element>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function PatchNote() {\r\n\r\n    return(\r\n        <element id=\"patchnote\">\r\n            <table>\r\n                <thead>\r\n                    <td>날짜</td><td>내용</td>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>2020년 5월 14일</td>\r\n                        <td>Mysql(MariaDB) - node.js Express 연동 에러 해결</td>\r\n                    </tr>\r\n                    <tr>                    \r\n                    <td>2020년 5월 14일</td>\r\n                    <td>게시판 UI 수정 &#38;&#38; 글쓰는 공간 만들기만 함.</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>2020년 5월 15일</td>\r\n                    <td>패치노트 생성 &#38;&#38; 이전까지의 패치노트는 작성 X</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>2020년 5월 15일</td>\r\n                    <td>Navigation Bar 화면 크기에 따라 width값 조정</td>\r\n                    </tr>\r\n\r\n                    \r\n                    <tr>\r\n                    <td>2020년 5월 15일</td>\r\n                    <td>video tag를 쓰면 button 쪽에 에러가 발생하여 &#60;img&#62; 태그에 gif 이미지 사용</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </element>\r\n    )\r\n}","import React from 'react';\r\nimport Banner from './Banner';\r\nimport Board from './board/Board';\r\nimport Home from './home/Home'\r\nimport MiniGame from './minigame/MiniGame';\r\nimport PatchNote from './PatchNote';\r\nfunction Contents(props) {\r\n    return (\r\n        <element id=\"contents\">\r\n            <Banner />\r\n            <div className=\"Checkmenus\">\r\n            {\r\n            props.CheckMenu === \"HOME\" ? (<Home />) : \r\n            props.CheckMenu === \"BOARD\" ? (<Board />) :\r\n            props.CheckMenu === \"MINIGAME\" ? (<MiniGame />) :\r\n            props.CheckMenu === \"PatchNote\" ? (<PatchNote />) :\r\n             <div>Start ! { props.CheckMenu } 추후 구현 예정인 메뉴입니다.</div> \r\n             \r\n             }\r\n            </div>\r\n        </element>\r\n    )\r\n}\r\n\r\n\r\nexport default Contents;","\nimport React from 'react';\nimport './App.css';\n\nimport Navigation from './components/Main/navigation/Navigation'\n\nimport Contents from './components/Main/contents/Contents'\n\nimport { useState } from 'react';\n\nfunction App(props) {\n  const [state, setState] = useState(\"HOME\");\n\n  console.log(\"Start App\");\n  var CheckMenu = (iNum) => {\n    setState(iNum);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navigation CheckMenu = {CheckMenu}/>\n      <Contents CheckMenu = {state}/>\n      \n      {/* <Contents /> */}\n      \n      <div id=\"bottom\">\n        make with React_Node.js\n        GaeTaeng's Home <br />\n        Naver : nuckly@naver.com <br />\n        GMail : nuckly60@gmail.com <br />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}